{"version":3,"sources":["firebase.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","components/CustomListItem.js","Screens/HomeScreen.js","Screens/AddChatScreen.js","Screens/ChatScreen.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","console","log","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","onPress","title","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","RegisterScreen","name","setName","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","h3","marginBottom","autofocus","raised","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","bottomDivider","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","headerStyle","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","AddChatScreen","input","setInput","createChat","a","async","add","goBack","leftIcon","disabled","ChatScreen","route","messages","setMessages","headerBackTitleVisible","headerTitleAlign","headerTitle","Text","params","sendMessage","Keyboard","dismiss","timestamp","Timestamp","now","toDate","toString","Platform","OS","keyboardVerticalOffset","TouchableWithoutFeedback","contentContainerStyle","paddingTop","reciever","position","bottom","right","recieverText","sender","left","senderText","senderName","footer","TextInput","textInput","Ionicons","alignSelf","borderRadius","maxWidth","margin","paddingRight","fontSize","borderColor","Stack","createNativeStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"kMA0BeA,G,eANe,IAAzBC,IAASC,KAAKC,OACTF,IAASG,cAbI,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAQTV,IAASW,OAGKC,aACTC,EAAOb,IAASa,O,OCoChBC,EAxDK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrB,EAAwBC,mBAAS,IAAjC,WAAMC,EAAN,KAAYC,EAAZ,KACA,EAA8BF,mBAAS,IAAvC,WAAMG,EAAN,KAAeC,EAAf,KAEAC,qBAAU,WAQR,OAPoBR,EAAKS,oBAAmB,SAACC,GAC3CC,QAAQC,IAAIF,GACTA,GACDR,EAAWW,QAAQ,aAKtB,IAEH,IAAMC,EAAS,WACbd,EACCe,2BAA2BX,EAAME,GACjCU,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAG1B,OACE,eAACE,EAAA,EAAD,CAAsBC,SAAS,UAAUC,MAAOC,EAAOC,UAAvD,UACE,cAACC,EAAA,EAAD,CAAWH,MAAM,UACjB,cAAC,IAAD,CACEI,OAAQ,CACNC,IACC,0EAEHL,MAAO,CAACM,MAAM,IAAIC,OAAO,OAE3B,eAACC,EAAA,EAAD,CAAMR,MAAOC,EAAOQ,eAApB,UACE,cAAC,IAAD,CACAC,YAAY,QACZC,WAAS,EACTC,KAAK,QACLC,MAAO9B,EACP+B,aAAc,SAACC,GAAD,OAAU/B,EAAS+B,MAEjC,cAAC,IAAD,CACAL,YAAY,WACZM,iBAAe,EACfJ,KAAK,WACLC,MAAO5B,EACP6B,aAAc,SAACC,GAAD,OAAU7B,EAAY6B,IACpCE,gBAAiBxB,OAInB,cAAC,IAAD,CAAQyB,eAAgBjB,EAAOkB,OAAQC,QAAS3B,EAAQ4B,MAAM,UAC9D,cAAC,IAAD,CAAQD,QAAS,kBAAMvC,EAAWyC,SAAS,aAAaJ,eAAgBjB,EAAOkB,OAAQP,KAAK,UAAUS,MAAM,aAC5G,cAACb,EAAA,EAAD,CAAMR,MAAO,CAACO,OAAQ,WAOtBN,EAASsB,IAAWC,OAAO,CAC/BtB,UAAW,CACTuB,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,QAAS,GACTC,gBAAiB,SAEnBpB,eAAgB,CACdH,MAAO,KAETa,OAAQ,CACNb,MAAO,IACPwB,UAAW,M,kBCGAC,EA3EQ,SAAC,GAAoB,IAAlBlD,EAAiB,EAAjBA,WACtB,EAAuBC,mBAAS,IAAhC,WAAMkD,EAAN,KAAYC,EAAZ,KACA,EAAyBnD,mBAAS,IAAlC,WAAMC,EAAN,KAAaC,EAAb,KACA,EAA+BF,mBAAS,IAAxC,WAAMG,EAAN,KAAgBC,EAAhB,KACA,EAA+BJ,mBAAS,IAAxC,WAAMoD,EAAN,KAAgBC,EAAhB,KAEAC,2BAAgB,WACdvD,EAAWwD,WAAW,CACtBC,gBAAiB,oBAEhB,IAEH,IAAMC,EAAW,WACb5D,EAAK6D,+BAA+BzD,EAAME,GACzCwD,MAAK,SAAApD,GACFA,EAASqD,KAAKC,cAAc,CACxBC,YAAaZ,EACba,SAAUX,GAAY,4EAE3BvC,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAMkD,aAGpC,OACE,eAAChD,EAAA,EAAD,CAAsBC,SAAS,UAAUC,MAAOC,EAAOC,UAAvD,UACE,cAACC,EAAA,EAAD,CAAWH,MAAM,UAEjB,cAAC,IAAD,CAAM+C,IAAE,EAAC/C,MAAO,CAACgD,aAAc,IAA/B,+BAIE,eAACxC,EAAA,EAAD,CAAMR,MAAOC,EAAOQ,eAApB,UACI,cAAC,IAAD,CACCC,YAAY,YACZuC,WAAS,EACTrC,KAAK,OACLC,MAAOmB,EACPlB,aAAc,SAACC,GAAD,OAAUkB,EAAQlB,MAGjC,cAAC,IAAD,CACCL,YAAY,QACZE,KAAK,QACLC,MAAO9B,EACP+B,aAAc,SAACC,GAAD,OAAU/B,EAAS+B,MAGlC,cAAC,IAAD,CACCL,YAAY,WACZE,KAAK,WACLI,iBAAe,EACfH,MAAO5B,EACP6B,aAAc,SAACC,GAAD,OAAU7B,EAAY6B,MAGrC,cAAC,IAAD,CACCL,YAAY,iCACZE,KAAK,OACLC,MAAOqB,EACPpB,aAAc,SAACC,GAAD,OAAUoB,EAAYpB,IACpCE,gBAAmBsB,OAKxB,cAAC,IAAD,CACArB,eAAgBjB,EAAOkB,OACvB+B,QAAM,EACN9B,QAASmB,EACTlB,MAAM,aAEN,cAACb,EAAA,EAAD,CAAMR,MAAO,CAACO,OAAO,WAOvBN,EAASsB,IAAWC,OAAO,CAC7BtB,UAAW,CACPuB,KAAM,EACNC,WAAY,SACZC,eAAgB,SAChBC,QAAS,GACTC,gBAAiB,SAErBV,OAAQ,CACJb,MAAO,IACPwB,UAAW,IAEfrB,eAAgB,CACZH,MAAM,O,wBCpDC6C,EAvCQ,SAAC,GAA+B,IAAD,MAA7BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UACrC,EAAuCxE,mBAAS,IAAhD,WAAMyE,EAAN,KAAoBC,EAApB,KAcA,OAZArE,qBAAU,WASR,OARmBtB,EACnB4F,WAAW,SACXC,IAAIN,GACJK,WAAW,YACXE,QAAQ,YAAa,QACrBC,YAAW,SAACC,GAAD,OACVL,EAAgBK,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,iBAMhD,eAAC,IAAD,CAAU5C,QAAS,kBAAMkC,EAAUF,EAAIC,IAAoBY,eAAa,EAAxE,UACE,cAAC,IAAD,CACCC,SAAO,EACP9D,OAAQ,CACPC,KAAiB,MAAZkD,GAAA,SAAAA,EAAe,SAAf,IAAmBV,WACxB,0EAID,eAAC,IAASsB,QAAV,WACE,cAAC,IAASC,MAAV,CAAgBpE,MAAO,CAACqE,WAAY,OAApC,SACIhB,IAEJ,eAAC,IAASiB,SAAV,CACCC,cAAe,EACfC,cAAc,OAFf,gBAGIjB,GAHJ,SAGIA,EAAe,SAHnB,EAGI,EAAmBX,YAHvB,YAGuCW,GAHvC,SAGuCA,EAAe,SAHtD,EAGuC,EAAmBT,gBAhBRM,I,GAyB5C7B,IAAWC,OAAO,I,iBCwClBiD,EA7EG,SAAC,GAAkB,IAAjB5F,EAAgB,EAAhBA,WAClB,EAAwBC,mBAAS,IAAjC,WAAM4F,EAAN,KAAYC,EAAZ,KAEMC,EAAc,WAClBjG,EAAKkG,UACJpC,MAAK,WACJ5D,EAAWW,QAAQ,aAIvBL,qBAAU,WAWV,OAVsBtB,EACnB4F,WAAW,SACXG,YAAW,SAACC,GAAD,OACVc,EACAd,EAASC,KAAKC,KAAI,SAACL,GAAD,MAAU,CAC1BN,GAAIM,EAAIN,GACRY,KAAMN,EAAIM,iBAKd,IAEF5B,2BAAgB,WACdvD,EAAWwD,WAAW,CACpBhB,MAAO,YACPyD,YAAa,CAAEjD,gBAAiB,QAChCkD,iBAAkB,CAAEC,MAAM,SAC1BC,gBAAiB,QACjBC,WAAY,wBACV,cAAC1E,EAAA,EAAD,CAAMR,MAAO,CAAEmF,WAAY,IAA3B,SACE,cAACC,EAAA,EAAD,CAAkBhE,QAASwD,EAAaS,cAAe,GAAvD,SACA,cAAC,IAAD,CAAQnB,SAAO,EAAC9D,OAAQ,CAAEC,IAAG,MAAE1B,GAAF,SAAEA,EAAM2G,kBAAR,EAAE,EAAmBzC,iBAItD0C,YAAa,kBACX,eAAC/E,EAAA,EAAD,CAAMR,MAAO,CACXwF,cAAe,MACf7D,eAAe,gBACfrB,MAAO,GACPmF,YAAa,IAJf,UAME,cAACL,EAAA,EAAD,CAAkBC,cAAe,GAAjC,SACE,cAACK,EAAA,EAAD,CAAW1D,KAAK,UAAU2D,KAAM,GAAIX,MAAM,YAE5C,cAACI,EAAA,EAAD,CAAkBhE,QAAS,kBAAMvC,EAAWyC,SAAS,YAAY+D,cAAe,GAAhF,SACE,cAACO,EAAA,EAAD,CAAiB5D,KAAK,SAAS2D,KAAM,GAAIX,MAAM,oBAKtD,CAACnG,IAEJ,IAAMyE,EAAY,SAACF,EAAGC,GACpBxE,EAAWyC,SAAS,OAAO,CACzB8B,GAAIA,EACJC,SAAUA,KAId,OACE,cAACwC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAY9F,MAAOC,EAAOC,UAA1B,SACGwE,EAAMX,KAAI,gBAAEX,EAAF,EAAEA,GAAWC,EAAb,EAAKW,KAAQX,SAAb,OACT,cAAC,EAAD,CAEAD,GAAIA,EACJC,SAAUA,EACVC,UAAWA,GAHNF,WAYTnD,EAASsB,IAAWC,OAAO,CAC/BtB,UAAU,CACRK,OAAQ,U,0BC3CGwF,EAvCO,SAAC,GAAkB,IAAjBlH,EAAgB,EAAhBA,WACpB,EAAwBC,mBAAS,IAAjC,WAAMkH,EAAN,KAAYC,EAAZ,KAEF7D,2BAAgB,WACdvD,EAAWwD,WAAW,CACpBhB,MAAO,iBACPiB,gBAAiB,YAGlB,CAACzD,IAEJ,IAAMqH,EAAa,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACVtI,EACL4F,WAAW,SACX4C,IAAI,CACFhD,SAAU2C,IAEZvD,MAAK,WACH5D,EAAWyH,YAEb3G,OAAM,SAACC,GAAD,OAAWC,MAAMD,OATR,6DAYnB,OACE,eAACY,EAAA,EAAD,CAAMR,MAAOC,EAAOC,UAApB,UACE,cAAC,IAAD,CACGQ,YAAY,oBACZG,MAAOmF,EACPlF,aAAc,SAACC,GAAD,OAAUkF,EAASlF,IACjCE,gBAAiBiF,EACjBK,SACG,cAAC,UAAD,CAAMvE,KAAK,SAASpB,KAAK,YAAY+E,KAAM,GAAIX,MAAM,YAG3D,cAAC,IAAD,CAAQwB,UAAWR,EAAO5E,QAAS8E,EAAY7E,MAAM,wBAOrDpB,EAASsB,IAAWC,OAAO,CAC7BtB,UAAW,CACP2B,gBAAiB,QACjBD,QAAS,GACTrB,OAAQ,U,2EC8HDkG,EA1KI,SAAC,GAAwB,IAAvB5H,EAAsB,EAAtBA,WAAW6H,EAAW,EAAXA,MAC9B,EAAwB5H,mBAAS,IAAjC,WAAMkH,EAAN,KAAYC,EAAZ,KACA,EAA8BnH,mBAAS,IAAvC,WAAM6H,EAAN,KAAeC,EAAf,KAEAxE,2BAAgB,WACdvD,EAAWwD,WAAW,CACpBhB,MAAM,OACNwF,wBAAuB,EACvBC,iBAAiB,OACjBC,YAAa,wBACb,eAACvG,EAAA,EAAD,CACAR,MAAO,CACLwF,cAAc,MACd9D,WAAW,UAHb,UAKE,cAAC,IAAD,CACAwC,SAAO,EACP9D,OAAQ,CACNC,IAAG,SAAEsG,EAAS,SAAX,EAAE,EAAa3C,KAAKnB,YAEzB,cAACmE,EAAA,EAAD,CACAhH,MAAO,CACNgF,MAAM,QACNG,WAAY,GACZd,WAAY,OAJb,SAMGqC,EAAMO,OAAO5D,eAMlBkC,YAAa,kBACX,eAAC/E,EAAA,EAAD,CACCR,MAAO,CACNwF,cAAe,MACf7D,eAAgB,gBAChBrB,MAAO,GACPmF,YAAa,IALf,UAOE,cAACL,EAAA,EAAD,UACE,cAAC,IAAD,CAAapD,KAAK,eAAe2D,KAAM,GAAIX,MAAM,YAGnD,cAACI,EAAA,EAAD,UACE,cAAC,IAAD,CAAapD,KAAK,QAAQ2D,KAAM,GAAIX,MAAM,oBAKjD,CAACnG,EAAW8H,IAEf,IAAMO,EAAc,WAChBC,IAASC,UAETvJ,EACC4F,WAAW,SACXC,IAAIgD,EAAMO,OAAO7D,IACjBK,WAAW,YACX4C,IAAI,CACHgB,UAAWvJ,IAASY,UAAU4I,UAAUC,MAAMC,SAASC,WACvD3E,QAASkD,EACTpD,YAAajE,EAAK2G,YAAY1C,YAC9B7D,MAAOJ,EAAK2G,YAAYvG,MACxB8D,SAAUlE,EAAK2G,YAAYzC,YAoBjC,OAhBAT,2BAAgB,WAad,OAZmBvE,EAClB4F,WAAW,SACXC,IAAIgD,EAAMO,OAAO7D,IACjBK,WAAW,YACXE,QAAQ,YAAa,QACrBC,YAAW,SAACC,GAAD,OAAc+C,EACxB/C,EAASC,KAAKC,KAAI,SAAAL,GAAG,MAAK,CACxBN,GAAIM,EAAIN,GACRY,KAAMN,EAAIM,iBAKb,CAAC0C,IAIF,eAACb,EAAA,EAAD,CAAc7F,MAAO,CACnByB,KAAK,EACLI,gBAAgB,SAFlB,UAKE,cAAC,IAAD,CAAW7B,MAAM,UAChB,cAACF,EAAA,EAAD,CACAC,SAA0B,YAAhB2H,IAASC,GAAmB,UAAY,SAClD3H,MAAQC,EAAOC,UACf0H,uBAAwB,GAHxB,SAKC,cAACC,EAAA,EAAD,CAA0BzG,QAAS+F,IAASC,QAA5C,SAEF,qCACA,cAACtB,EAAA,EAAD,CAAYgC,sBAAuB,CAACC,WAAY,IAAhD,SACGpB,EAAS5C,KAAI,gBAAEX,EAAF,EAAEA,GAAGY,EAAL,EAAKA,KAAL,OACZA,EAAKjF,QAAUJ,EAAK2G,YAAYvG,MAC/B,eAACyB,EAAA,EAAD,CAAeR,MAAOC,EAAO+H,SAA7B,UACC,cAAC,IAAD,CACCC,SAAS,WACT/D,SAAO,EAEPhD,eAAgB,CACf+G,SAAS,WACTC,QAAQ,GACRC,OAAQ,GAETD,QAAS,GACTC,OAAQ,EACRxC,KAAM,GACNvF,OAAQ,CACPC,IAAI2D,EAAKnB,YAGX,cAACmE,EAAA,EAAD,CAAMhH,MAAOC,EAAOmI,aAApB,SAAmCpE,EAAKlB,YAjB9BM,GAoBX,eAAC5C,EAAA,EAAD,CAAeR,MAAOC,EAAOoI,OAA7B,UACC,cAAC,IAAD,CACAJ,SAAS,WACT/D,SAAO,EAEPhD,eAAgB,CACf+G,SAAS,WACTC,QAAQ,GACRI,MAAO,GAERJ,QAAS,GACTI,MAAO,EACP3C,KAAM,GACNvF,OAAQ,CACPC,IAAI2D,EAAKnB,YAGV,cAACmE,EAAA,EAAD,CAAMhH,MAAOC,EAAOsI,WAApB,SAAiCvE,EAAKlB,UACtC,cAACkE,EAAA,EAAD,CAAMhH,MAAOC,EAAOuI,WAApB,SAAiCxE,EAAKpB,gBAlB5BQ,QAwBd,eAAC5C,EAAA,EAAD,CAAMR,MAAOC,EAAOwI,OAApB,UACE,cAACC,EAAA,EAAD,CACA7H,MAAOmF,EACPlF,aAAc,SAACC,GAAD,OAAUkF,EAASlF,IACjCE,gBAAiBiG,EACjBxG,YAAY,UACZV,MAAOC,EAAO0I,YAEd,cAACvD,EAAA,EAAD,CACAhE,QAAS8F,EACT7B,cAAe,GAFf,SAGE,cAACuD,EAAA,EAAD,CAAU5G,KAAK,OAAO2D,KAAM,GAAIX,MAAM,4BAc5C/E,EAASsB,IAAWC,OAAO,CAC/BtB,UAAU,CACRuB,KAAK,GAEPuG,SAAS,CACPpG,QAAS,GACTC,gBAAiB,UACjBgH,UAAW,WACXC,aAAc,GACdrD,YAAa,GACbzC,aAAc,GACd+F,SAAU,MACVd,SAAU,YAEZI,OAAO,CACLzG,QAAS,GACTC,gBAAiB,UACjBgH,UAAW,aACXC,aAAc,GACdE,OAAQ,GACRD,SAAU,MACVd,SAAU,YAEZO,WAAW,CACTF,KAAM,GACNW,aAAc,GACdC,SAAU,GACVlE,MAAO,SAEToD,aAAc,CACZpD,MAAM,QACNX,WAAY,MACZc,WAAY,IAEdsD,OAAO,CACLjD,cAAe,MACf9D,WAAY,SACZpB,MAAO,OACPsB,QAAS,IAEX+G,UAAW,CACTT,OAAQ,EACR3H,OAAQ,GACRkB,KAAM,EACNgE,YAAa,GACb0D,YAAa,cACbtH,gBAAiB,UACjBD,QAAS,GACToD,MAAM,OACN8D,aAAa,MC3NXM,EAAQC,cACRC,EAAsB,CAC1BxE,YAAa,CAACjD,gBAAiB,WAC/BkD,iBAAkB,CAACC,MAAM,SACzBC,gBAAiB,SAGJ,SAASsE,IACtB,OACE,cAACC,EAAA,EAAD,UACC,eAACJ,EAAMK,UAAP,CAEAC,cAAeJ,EAFf,UAGE,cAACF,EAAMO,OAAP,CAAc3H,KAAO,QAAQ4H,UAAWhL,IACxC,cAACwK,EAAMO,OAAP,CAAc3H,KAAO,WAAW4H,UAAW7H,IAC3C,cAACqH,EAAMO,OAAP,CAAc3H,KAAO,OAAO4H,UAAWnF,IACvC,cAAC2E,EAAMO,OAAP,CAAc3H,KAAO,UAAU4H,UAAW7D,IAC1C,cAACqD,EAAMO,OAAP,CAAc3H,KAAO,OAAO4H,UAAWnD,SAM/BlF,IAAWC,OAAO,CAC/BtB,UAAW,CACTuB,KAAM,EACNI,gBAAiB,OACjBH,WAAY,SACZC,eAAgB,a","file":"static/js/app.8ba4519e.chunk.js","sourcesContent":["// import * as firebase from \"firebase\";\r\n// import \"firebase/firestore\";\r\n// import \"firebase/auth\";\r\n\r\nimport firebase from \"firebase/compat/app\"\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBQwCcOJhGGbdLvYDn2yGHUQSxPZ_XD950\",\r\n    authDomain: \"messengerapp-74646.firebaseapp.com\",\r\n    projectId: \"messengerapp-74646\",\r\n    storageBucket: \"messengerapp-74646.appspot.com\",\r\n    messagingSenderId: \"1093326554239\",\r\n    appId: \"1:1093326554239:web:b08e22dd299928532a6b4a\",\r\n    measurementId: \"G-ENNTG5KS81\"\r\n  };\r\n\r\n  let app;\r\n\r\n  if(firebase.apps.length === 0){\r\n    app = firebase.initializeApp(firebaseConfig)\r\n  } else{\r\n    app = firebase.app();\r\n  }\r\n \r\n  export const db = app.firestore();\r\n  export const auth = firebase.auth();\r\n\r\n\r\n\r\n","import React, { useState,useEffect } from 'react'\r\nimport { StyleSheet, View, KeyboardAvoidingView} from 'react-native'\r\nimport {Button, Input, Image, Text} from \"react-native-elements\";\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { auth } from '../firebase';\r\n\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const[email,setEmail] = useState(\"\");\r\n  const[password,setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      console.log(authUser);\r\n      if(authUser){\r\n        navigation.replace(\"Home\");\r\n      }\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n  \r\n  const signIn = () =>{\r\n    auth\r\n    .signInWithEmailAndPassword(email,password)\r\n    .catch((error) => alert(error));\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      <StatusBar style=\"light\"/>\r\n      <Image \r\n        source={{\r\n          uri:\r\n           \"https://blog.mozilla.org/internetcitizen/files/2018/08/signal-logo.png\"\r\n        }}\r\n        style={{width:200,height:200}}/>\r\n\r\n      <View style={styles.inputContainer}>\r\n        <Input \r\n        placeholder='Email' \r\n        autoFocus \r\n        type=\"email\" \r\n        value={email} \r\n        onChangeText={(text) => setEmail(text)}/>\r\n       \r\n        <Input \r\n        placeholder='Password' \r\n        secureTextEntry \r\n        type=\"password\"\r\n        value={password} \r\n        onChangeText={(text) => setPassword(text)}\r\n        onSubmitEditing={signIn}\r\n        />\r\n      </View>\r\n\r\n      <Button containerStyle={styles.button} onPress={signIn} title=\"Login\"/>\r\n      <Button onPress={() => navigation.navigate(\"Register\")} containerStyle={styles.button} type=\"outline\" title=\"Register\"/>\r\n      <View style={{height: 100}}/>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  inputContainer: {\r\n    width: 300,\r\n  },\r\n  button: {\r\n    width: 200,\r\n    marginTop: 10,\r\n  },\r\n});","import { StyleSheet,View,KeyboardAvoidingView } from 'react-native'\r\nimport React, { useState,useLayoutEffect } from 'react'\r\nimport { StatusBar } from \"expo-status-bar\"\r\nimport {Button, Input, Text} from \"react-native-elements\";\r\nimport { auth } from '../firebase';\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n    const[name, setName] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n    const[imageUrl, setImageUrl] = useState('')\r\n\r\n    useLayoutEffect(() => {\r\n      navigation.setOptions({\r\n      headerBackTitle: \"Back to Login\"\r\n      });\r\n    }, [])\r\n\r\n    const register = () => {\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n        .then(authUser => {\r\n            authUser.user.updateProfile({\r\n                displayName: name,\r\n                photoURL: imageUrl || \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\",\r\n            })\r\n        }).catch(error => alert(error.message));\r\n    }\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      <StatusBar style=\"light\"/>\r\n\r\n      <Text h3 style={{marginBottom: 50}}>\r\n        Create an Account\r\n        </Text>\r\n\r\n        <View style={styles.inputContainer}>\r\n            <Input\r\n             placeholder='Full Name' \r\n             autofocus\r\n             type='text'\r\n             value={name}\r\n             onChangeText={(text) => setName(text)}\r\n             />\r\n\r\n            <Input\r\n             placeholder='Email' \r\n             type='email'\r\n             value={email}\r\n             onChangeText={(text) => setEmail(text)}\r\n             />\r\n\r\n            <Input\r\n             placeholder='Password' \r\n             type='password'\r\n             secureTextEntry\r\n             value={password}\r\n             onChangeText={(text) => setPassword(text)}\r\n             />\r\n\r\n            <Input\r\n             placeholder='Profile Picture URl (optional)' \r\n             type='text'\r\n             value={imageUrl}\r\n             onChangeText={(text) => setImageUrl(text)}\r\n             onSubmitEditing = {register}\r\n             />\r\n\r\n        </View>\r\n\r\n        <Button \r\n        containerStyle={styles.button}\r\n        raised \r\n        onPress={register} \r\n        title=\"Register\"/>\r\n\r\n        <View style={{height:100}}/>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: 10,\r\n        backgroundColor: \"white\",\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 10,\r\n    }, \r\n    inputContainer: {\r\n        width:300,\r\n    }\r\n})","import { StyleSheet, Text, View } from 'react-native'\r\nimport React, { useState,useEffect } from 'react'\r\nimport { Avatar, ListItem } from 'react-native-elements'\r\nimport { db } from '../firebase'\r\n\r\nconst CustomListItem = ({id, chatName, enterChat}) => {\r\n  const[chatMessages, setChatMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n   const unsubscribe = db\r\n   .collection(\"chats\")\r\n   .doc(id)\r\n   .collection(\"messages\")\r\n   .orderBy(\"timestamp\", \"desc\")\r\n   .onSnapshot((snapshot) => \r\n     setChatMessages(snapshot.docs.map((doc) => doc.data()))\r\n   );\r\n    return unsubscribe;\r\n  });\r\n  \r\n  return (\r\n    <ListItem onPress={() => enterChat(id, chatName)} key={id} bottomDivider>\r\n      <Avatar\r\n       rounded\r\n       source={{\r\n        uri: chatMessages?.[0]?.photoURL || \r\n        \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\",\r\n       }}\r\n       />\r\n\r\n       <ListItem.Content>\r\n         <ListItem.Title style={{fontWeight: \"800\"}}>\r\n            {chatName}\r\n         </ListItem.Title>\r\n         <ListItem.Subtitle \r\n          numberOfLines={1}\r\n          ellipsizeMode=\"tail\">\r\n            {chatMessages?.[0]?.displayName} : {chatMessages?.[0]?.message}\r\n          </ListItem.Subtitle>\r\n       </ListItem.Content>\r\n    </ListItem>\r\n  )\r\n}\r\n\r\nexport default CustomListItem\r\n\r\nconst styles = StyleSheet.create({})","import { View, Text,StyleSheet, ScrollView,SafeAreaView, TouchableOpacity } from 'react-native'\r\nimport React,{useLayoutEffect,useEffect,useState} from 'react'\r\nimport CustomListItem from '../components/CustomListItem'\r\nimport { Avatar } from 'react-native-elements';\r\nimport { auth,db } from '../firebase';\r\nimport { AntDesign, SimpleLineIcons } from \"@expo/vector-icons\";\r\n\r\n\r\n\r\nconst HomeScreen= ({navigation}) => {\r\n  const[chats,setChats] = useState([]);\r\n\r\n  const signOutUser = () => {\r\n    auth.signOut()\r\n    .then(() =>{\r\n      navigation.replace(\"Login\");\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db\r\n    .collection('chats')\r\n    .onSnapshot((snapshot) =>\r\n      setChats(\r\n      snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        data: doc.data(),\r\n      }))\r\n      )\r\n    )\r\n  return unsubscribe;\r\n  },[]);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"Messenger\",\r\n      headerStyle: { backgroundColor: \"#fff\"},\r\n      headerTitleStyle: { color:\"black\" },\r\n      headerTintColor: \"black\",\r\n      headerLeft: () => (\r\n        <View style={{ marginLeft: 20 }}>\r\n          <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\r\n          <Avatar rounded source={{ uri: auth?.currentUser?.photoURL }} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      ),\r\n      headerRight: () => (\r\n        <View style={{\r\n          flexDirection: \"row\",\r\n          justifyContent:\"space-between\",\r\n          width: 80,\r\n          marginRight: 20,\r\n        }}>\r\n          <TouchableOpacity activeOpacity={0.5}>\r\n            <AntDesign name=\"camerao\" size={24} color=\"black\"/>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => navigation.navigate(\"AddChat\")} activeOpacity={0.5}>\r\n            <SimpleLineIcons name=\"pencil\" size={24} color=\"black\"/>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ),\r\n    });\r\n  }, [navigation]);\r\n\r\n  const enterChat = (id,chatName) => {\r\n    navigation.navigate('Chat',{\r\n      id: id,\r\n      chatName: chatName,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <ScrollView style={styles.container}>\r\n        {chats.map(({id,data: { chatName } }) => (\r\n          <CustomListItem \r\n          key={id} \r\n          id={id} \r\n          chatName={chatName}\r\n          enterChat={enterChat} />\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    height: \"100%\",\r\n  }\r\n});","import { StyleSheet, Text, View } from 'react-native'\r\nimport React from 'react'\r\nimport { useLayoutEffect } from 'react'\r\nimport {Button, Input } from 'react-native-elements'\r\nimport { useState } from 'react'\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { db } from '../firebase'\r\n\r\nconst AddChatScreen = ({navigation}) => {\r\n    const[input,setInput] = useState(\"\");\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"Add a new chat\",\r\n      headerBackTitle: \"Chats\",\r\n    });\r\n\r\n  }, [navigation])\r\n\r\n  const createChat = async () => {\r\n     await db\r\n     .collection('chats')\r\n     .add({\r\n        chatName: input\r\n     })\r\n     .then(() => {\r\n        navigation.goBack();\r\n     })\r\n     .catch((error) => alert(error));\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Input\r\n         placeholder='Enter a chat name'\r\n         value={input}\r\n         onChangeText={(text) => setInput(text)}\r\n         onSubmitEditing={createChat}\r\n         leftIcon={\r\n            <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"black\" />\r\n         }\r\n      />\r\n      <Button disabled={!input} onPress={createChat} title='Create new Chat'/>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default AddChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"white\",\r\n        padding: 30,\r\n        height: \"100%\",\r\n    }\r\n})","import { StyleSheet, Text, TouchableOpacity, View,StatusBar, KeyboardAvoidingView,TouchableWithoutFeedback, Platform, ScrollView, TextInput,SafeAreaView, Keyboard  } from 'react-native'\r\nimport React, { useLayoutEffect } from 'react'\r\nimport { Avatar } from 'react-native-elements'\r\nimport { AntDesign, FontAwesome, Ionicons} from \"@expo/vector-icons\";\r\nimport { useState } from 'react';\r\nimport firebase from 'firebase/compat';\r\nimport {db,auth} from '../firebase';\r\n// import firebase from 'firebase';\r\n\r\nconst ChatScreen = ({navigation,route}) => {\r\n  const[input,setInput] = useState('');\r\n  const[messages,setMessages] = useState([])\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title:\"Chat\",\r\n      headerBackTitleVisible:false,\r\n      headerTitleAlign:\"left\",\r\n      headerTitle: () => (\r\n      <View \r\n      style={{\r\n        flexDirection:\"row\",\r\n        alignItems:\"center\",\r\n        }}>\r\n        <Avatar \r\n        rounded\r\n        source={{\r\n          uri: messages[0]?.data.photoURL \r\n        }}/>\r\n        <Text\r\n        style={{\r\n         color:\"white\",\r\n         marginLeft: 10,\r\n         fontWeight: \"700\"\r\n        }}>\r\n          {route.params.chatName}\r\n        </Text>\r\n      </View>\r\n      ),\r\n  \r\n\r\n      headerRight: () => (\r\n        <View\r\n         style={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          width: 80,\r\n          marginRight: 20,\r\n         }}>\r\n          <TouchableOpacity>\r\n            <FontAwesome name=\"video-camera\" size={24} color=\"white\"/>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity>\r\n            <FontAwesome name=\"phone\" size={24} color=\"white\"/>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )\r\n    });\r\n  }, [navigation,messages]);\r\n\r\n  const sendMessage = () => {\r\n      Keyboard.dismiss();\r\n\r\n      db\r\n      .collection('chats')\r\n      .doc(route.params.id)\r\n      .collection('messages')\r\n      .add({\r\n        timestamp: firebase.firestore.Timestamp.now().toDate().toString(),\r\n        message: input,\r\n        displayName: auth.currentUser.displayName,\r\n        email: auth.currentUser.email,\r\n        photoURL: auth.currentUser.photoURL\r\n      })\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n   const unsubscribe = db\r\n    .collection(\"chats\")\r\n    .doc(route.params.id)\r\n    .collection(\"messages\")\r\n    .orderBy(\"timestamp\", \"desc\")\r\n    .onSnapshot((snapshot) => setMessages(\r\n      snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        data: doc.data()\r\n      }))\r\n    ));\r\n\r\n    return unsubscribe;\r\n  }, [route]);\r\n\r\n  return (\r\n    \r\n    <SafeAreaView style={{\r\n      flex:1, \r\n      backgroundColor:\"white\"\r\n      }}>\r\n      \r\n      <StatusBar style=\"light\"/>\r\n       <KeyboardAvoidingView \r\n       behavior={Platform.OS === \"android\" ? \"padding\" : \"height\"}\r\n       style= {styles.container}\r\n       keyboardVerticalOffset={90}>\r\n\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n        \r\n      <>\r\n      <ScrollView contentContainerStyle={{paddingTop: 15}}>\r\n        {messages.map(({id,data}) =>\r\n          data.email === auth.currentUser.email ? (\r\n           <View key={id} style={styles.reciever}>\r\n            <Avatar\r\n             position=\"absolute\"\r\n             rounded\r\n             //WEB\r\n             containerStyle={{\r\n              position:\"absolute\",\r\n              bottom:-15,\r\n              right: -5,\r\n             }}\r\n             bottom={-15}\r\n             right={-5}\r\n             size={30}\r\n             source={{\r\n              uri:data.photoURL,\r\n             }}\r\n            />\r\n            <Text style={styles.recieverText}>{data.message}</Text>\r\n           </View>\r\n          ): (\r\n           <View key={id} style={styles.sender}>\r\n            <Avatar \r\n            position=\"absolute\"\r\n            rounded\r\n            //WEB\r\n            containerStyle={{\r\n             position:\"absolute\",\r\n             bottom:-15,\r\n             left: -5,\r\n            }}\r\n            bottom={-15}\r\n            left={-5}\r\n            size={30}\r\n            source={{\r\n             uri:data.photoURL,\r\n            }}\r\n            />\r\n            <Text style={styles.senderText}>{data.message}</Text>\r\n            <Text style={styles.senderName}>{data.displayName}</Text>\r\n           </View>\r\n          )\r\n        )}\r\n      </ScrollView>\r\n\r\n        <View style={styles.footer}>\r\n          <TextInput \r\n          value={input} \r\n          onChangeText={(text) => setInput(text)}\r\n          onSubmitEditing={sendMessage}\r\n          placeholder='Message' \r\n          style={styles.textInput}/>\r\n\r\n          <TouchableOpacity \r\n          onPress={sendMessage}\r\n          activeOpacity={0.5}>\r\n            <Ionicons name=\"send\" size={24} color=\"#2B68E6\"/>\r\n          </TouchableOpacity>\r\n        </View>\r\n        </>\r\n        </TouchableWithoutFeedback>\r\n      </KeyboardAvoidingView>\r\n    </SafeAreaView>\r\n   \r\n   \r\n  )\r\n}\r\n\r\nexport default ChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\n    flex:1,\r\n  },\r\n  reciever:{\r\n    padding: 15,\r\n    backgroundColor: \"#ECECEC\",\r\n    alignSelf: \"flex-end\",\r\n    borderRadius: 20,\r\n    marginRight: 15,\r\n    marginBottom: 20,\r\n    maxWidth: \"80%\",\r\n    position: \"relative\"\r\n  },\r\n  sender:{\r\n    padding: 15,\r\n    backgroundColor: \"#2B68E6\",\r\n    alignSelf: \"flex-start\",\r\n    borderRadius: 20,\r\n    margin: 15,\r\n    maxWidth: \"80%\",\r\n    position: \"relative\"\r\n  },\r\n  senderName:{\r\n    left: 10,\r\n    paddingRight: 10,\r\n    fontSize: 10,\r\n    color: \"white\",\r\n  },\r\n  recieverText: {\r\n    color:\"black\",\r\n    fontWeight: \"500\",\r\n    marginLeft: 10,\r\n  },\r\n  footer:{\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    padding: 15,\r\n  },\r\n  textInput: {\r\n    bottom: 0,\r\n    height: 40,\r\n    flex: 1,\r\n    marginRight: 15,\r\n    borderColor: \"transparent\",\r\n    backgroundColor: \"#ECECEC\",\r\n    padding: 10,\r\n    color:\"grey\",\r\n    borderRadius:30,\r\n  }\r\n})","import React from \"react\";\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport LoginScreen from \"./Screens/LoginScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport RegisterScreen from \"./Screens/RegisterScreen\";\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport AddChatScreen from \"./Screens/AddChatScreen\";\nimport ChatScreen from \"./Screens/ChatScreen\";\n\nconst Stack = createNativeStackNavigator();\nconst globalScreenOptions = {\n  headerStyle: {backgroundColor: \"#2C6BED\"},\n  headerTitleStyle: {color:\"white\"},\n  headerTintColor: \"white\",\n};\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n     <Stack.Navigator \n    //  initialRouteName=\"Home\"\n     screenOptions={globalScreenOptions} >\n       <Stack.Screen name = \"Login\" component={LoginScreen}/>\n       <Stack.Screen name = \"Register\" component={RegisterScreen}/>\n       <Stack.Screen name = \"Home\" component={HomeScreen}/> \n       <Stack.Screen name = \"AddChat\" component={AddChatScreen}/>  \n       <Stack.Screen name = \"Chat\" component={ChatScreen}/>  \n     </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}